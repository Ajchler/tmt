/attributes:
    story:
        I want to have common core attributes used consistently
        across tests, plans and stories.

    /summary:
        summary: Concise summary describing purpose of the object
        description:
            Should be a one-line string with up to 50 characters.
            It is challenging to be both concise and descriptive,
            but that is what a well-written summary should do.

    /description:
        summary: Detailed description of the object
        description:
            Text describing all important aspects of the object.
            Usually spans across several paragraphs. It should not
            contain detailed examples. Those should be stored
            under the 'examples' attribute.

    /examples:
        summary: Instructive examples of real-life usage.
        description:
            One example is worth thousand words. Providing a few,
            well selected, examples helps to understand quickly
            and get inspiration for initial experimenting.

/options:
    story:
        I want to have common command line options consistenly
        used across all supported commands and subcommands.

    /verbose:
        summary: Enable verbose output of the command
        examples:
            - tmt test show -v
            - tmt test show --verbose

    /quiet:
        summary: Enable quiet mode of the command
        examples:
            - tmt test show -q
            - tmt test show --quiet

    /force:
        summary: Force dangerous operations like overwriting files
        examples:
            - tmt test create -f
            - tmt test create --force
        related:
            - /stories/cli/test/create

    /format:
        summary: Provide machine readable output in given format
        examples:
            - tmt test ls --format json
            - tmt plan show --format yaml
            - tmt story export --format rst

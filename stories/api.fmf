story:
    As a tool developer I want an API which will allow me to
    comfortably access the L1 and L2 metadata.

/test:
    story:
        As a tool developer I want to easily access L1 metadata.

    /attributes:
        summary: 'Access test attributes'
        /name:
            examples: test.name
            implemented: /tmt/base
        /test:
            examples: test.test
            implemented: /tmt/base
        /path:
            examples: test.path
            description:
                Path to the test execution directory.
                Defaults to the object name.
            implemented: /tmt/base

    /explore:
        summary: 'Explore available tests'
        /list:
            summary: List all available tests
            examples: Test.search()
        /search:
            summary: Select tests by filter
            examples: Test.search(artifact='pull-request')

/plan:
    story:
        As a tool developer I want to easily access L2 metadata.

    /explore:
        summary: 'Explore available plans'
        /list:
            summary: List all available plans
            examples: Plan.search()
        /search:
            summary: Select plans by filter
            examples: Plan.search(name='/plans/smoke')

    /steps:
        summary: 'Access test steps'
        /discover:
            examples: plan.discover
        /provision:
            examples: plan.provision
        /prepare:
            examples: plan.prepare
        /execute:
            description: Default implementation is 'shell'.
            examples: plan.execute
        /report:
            examples: plan.report
        /finish:
            examples: plan.finish

    /attributes:
        summary: 'Access plan attributes'
        /summary:
            summary: Short plan description
            examples: plan.summary
            implemented: /tmt/base
        /artifact:
            summary: Artifacts for which plan is executed
            examples: plan.artifact
            implemented: /tmt/base
        /gate:
            summary: Gates for which the plan is relevant
            examples: plan.gate
            implemented: /tmt/base
